{"ast":null,"code":"/**\n * @license Angular v19.2.5\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { x as ActivatedRoute, y as ActivatedRouteSnapshot, A as ActivationEnd, b as ActivationStart, B as BaseRouteReuseStrategy, C as ChildActivationEnd, d as ChildActivationStart, w as ChildrenOutletContexts, D as DefaultTitleStrategy, J as DefaultUrlSerializer, E as EventType, G as GuardsCheckEnd, e as GuardsCheckStart, N as NavigationCancel, f as NavigationCancellationCode, g as NavigationEnd, h as NavigationError, i as NavigationSkipped, j as NavigationSkippedCode, k as NavigationStart, O as OutletContext, P as PRIMARY_OUTLET, u as ROUTER_CONFIGURATION, a as ROUTER_OUTLET_DATA, v as ROUTES, r as RedirectCommand, l as ResolveEnd, m as ResolveStart, n as RouteConfigLoadEnd, o as RouteConfigLoadStart, s as RouteReuseStrategy, t as Router, p as RouterEvent, R as RouterOutlet, z as RouterState, F as RouterStateSnapshot, q as RoutesRecognized, S as Scroll, T as TitleStrategy, U as UrlHandlingStrategy, K as UrlSegment, L as UrlSegmentGroup, M as UrlSerializer, Q as UrlTree, H as convertToParamMap, c as createUrlTreeFromSnapshot, I as defaultUrlMatcher, ɵ as ɵEmptyOutletComponent, W as ɵafterNextNavigation, V as ɵloadChildren } from './router-LSBBtrLI.mjs';\nexport { N as NoPreloading, P as PreloadAllModules, n as PreloadingStrategy, l as ROUTER_INITIALIZER, R as RouterLink, a as RouterLinkActive, R as RouterLinkWithHref, m as RouterModule, o as RouterPreloader, p as provideRouter, b as provideRoutes, c as withComponentInputBinding, d as withDebugTracing, e as withDisabledInitialNavigation, f as withEnabledBlockingInitialNavigation, g as withHashLocation, h as withInMemoryScrolling, i as withNavigationErrorHandler, j as withPreloading, k as withRouterConfig, w as withViewTransitions, q as ɵROUTER_PROVIDERS } from './router_module-C0FJ-J6L.mjs';\nimport { inject, Version } from '@angular/core';\nimport '@angular/common';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/platform-browser';\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n  return providers.map(provider => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n  return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.2.5');\nexport { VERSION, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve };\n//# sourceMappingURL=router.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}