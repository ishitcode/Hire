{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { interval } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AiInterviewComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Initiating the call. Please wait...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Call in progress...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Downloading call recording...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Transcribing interview...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Evaluating interview responses...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_9_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h3\");\n    i0.ɵɵtext(2, \"Interview Recording\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 19)(4, \"audio\", 20);\n    i0.ɵɵelement(5, \"source\", 21);\n    i0.ɵɵtext(6, \" Your browser does not support the audio element. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AiInterviewComponent_div_9_div_5_div_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.downloadRecording());\n    });\n    i0.ɵɵelement(8, \"i\", 23);\n    i0.ɵɵtext(9, \" Download Recording \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"src\", ctx_r2.audioUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction AiInterviewComponent_div_9_div_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"h3\");\n    i0.ɵɵtext(2, \"Interview Recording\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Audio recording is not available for this interview.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AiInterviewComponent_div_9_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"h3\");\n    i0.ɵɵtext(2, \"Interview Transcription\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.dataService.job, \" \");\n  }\n}\nfunction AiInterviewComponent_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"p\");\n    i0.ɵɵtext(2, \"\\u2705 Interview processing complete!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AiInterviewComponent_div_9_div_5_div_3_Template, 10, 1, \"div\", 14)(4, AiInterviewComponent_div_9_div_5_div_4_Template, 5, 0, \"div\", 15)(5, AiInterviewComponent_div_9_div_5_div_5_Template, 5, 1, \"div\", 16);\n    i0.ɵɵelementStart(6, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AiInterviewComponent_div_9_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.viewResults());\n    });\n    i0.ɵɵtext(7, \"View Results\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.audioUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.audioUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.dataService.job);\n  }\n}\nfunction AiInterviewComponent_div_9_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AiInterviewComponent_div_9_div_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.retryProcessing());\n    });\n    i0.ɵɵtext(4, \"Retry Processing\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nfunction AiInterviewComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementContainerStart(1, 4);\n    i0.ɵɵtemplate(2, AiInterviewComponent_div_9_div_2_Template, 4, 0, \"div\", 9)(3, AiInterviewComponent_div_9_div_3_Template, 4, 0, \"div\", 9)(4, AiInterviewComponent_div_9_div_4_Template, 4, 0, \"div\", 9)(5, AiInterviewComponent_div_9_div_5_Template, 8, 3, \"div\", 10)(6, AiInterviewComponent_div_9_div_6_Template, 5, 1, \"div\", 11);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.processingState);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"downloading\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"transcribing\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"evaluating\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"done\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n  }\n}\nfunction AiInterviewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AiInterviewComponent_div_10_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.monitorCallStatus());\n    });\n    i0.ɵɵtext(4, \"Retry\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nexport let AiInterviewComponent = /*#__PURE__*/(() => {\n  class AiInterviewComponent {\n    http;\n    dataService;\n    router;\n    statusCheckSubscription;\n    callStatus = 'initiating';\n    processingState = '';\n    errorMessage = '';\n    audioUrl = '';\n    maxRetries = 30; // 5 minutes maximum (10 second intervals)\n    retryCount = 0;\n    constructor(http, dataService, router) {\n      this.http = http;\n      this.dataService = dataService;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.monitorCallStatus();\n    }\n    ngOnDestroy() {\n      if (this.statusCheckSubscription) {\n        this.statusCheckSubscription.unsubscribe();\n      }\n      // Clean up the audio URL when component is destroyed\n      if (this.audioUrl) {\n        URL.revokeObjectURL(this.audioUrl);\n      }\n    }\n    monitorCallStatus() {\n      // Reset state when retrying\n      this.callStatus = 'initiating';\n      this.errorMessage = '';\n      this.retryCount = 0;\n      this.processingState = '';\n      if (this.statusCheckSubscription) {\n        this.statusCheckSubscription.unsubscribe();\n      }\n      // Immediately check status\n      this.checkCallStatus();\n      this.statusCheckSubscription = interval(5000) // Check every 5 seconds\n      .pipe(takeWhile(() => {\n        return this.retryCount < this.maxRetries && !['completed', 'failed'].includes(this.callStatus);\n      })).subscribe(() => {\n        this.checkCallStatus();\n      });\n    }\n    checkCallStatus() {\n      console.log('Checking call status...', this.retryCount);\n      this.http.get('http://localhost:4000/api/calls/status').subscribe(response => {\n        console.log('Status response:', response);\n        this.retryCount++;\n        if (response.status === 'completed') {\n          this.callStatus = 'completed';\n          if (this.statusCheckSubscription) {\n            this.statusCheckSubscription.unsubscribe();\n          }\n          this.processInterviewData();\n        } else if (response.status === 'failed') {\n          this.callStatus = 'failed';\n          this.errorMessage = response.error || 'Call failed to connect';\n          if (this.statusCheckSubscription) {\n            this.statusCheckSubscription.unsubscribe();\n          }\n        } else if (response.status === 'in_progress') {\n          this.callStatus = 'in_progress';\n        } else {\n          if (this.retryCount >= this.maxRetries) {\n            this.callStatus = 'failed';\n            this.errorMessage = 'Call initialization timed out. Please try again.';\n            if (this.statusCheckSubscription) {\n              this.statusCheckSubscription.unsubscribe();\n            }\n          }\n        }\n      }, error => {\n        console.error('Error checking call status:', error);\n        this.retryCount++;\n        if (this.retryCount >= this.maxRetries) {\n          this.callStatus = 'failed';\n          this.errorMessage = 'Failed to check call status. Please try again.';\n          if (this.statusCheckSubscription) {\n            this.statusCheckSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n    processInterviewData() {\n      this.processingState = 'downloading';\n      console.log('🔄 Starting to process interview data...');\n      // Get the transcript and call data\n      this.http.get('http://localhost:4000/api/calls').subscribe(response => {\n        console.log(\"📥 Raw API Response:\", response);\n        try {\n          if (!response) {\n            throw new Error('No response data received');\n          }\n          // Get the recording file if available\n          if (response.recording_file) {\n            this.audioUrl = `http://localhost:4000/api/recordings/${response.recording_file}`;\n            console.log(\"🎵 Audio URL set to:\", this.audioUrl);\n          } else {\n            console.log(\"⚠️ No recording file in response\");\n          }\n          // Store the transcription data\n          if (response.structured_conversation) {\n            console.log(\"📝 Setting structured conversation:\", response.structured_conversation);\n            this.dataService.setTranscription(response.structured_conversation);\n          } else {\n            console.warn(\"⚠️ No structured conversation in response\");\n            // If we have raw transcription but no structure, create a basic structure\n            if (response.raw_transcription) {\n              const basicStructure = {\n                conversation: [{\n                  speaker: 'AI_HR',\n                  text: response.raw_transcription\n                }]\n              };\n              this.dataService.setTranscription(basicStructure);\n            } else {\n              this.dataService.clearTranscription();\n            }\n          }\n          // Get raw transcript for evaluation\n          const transcript = response.raw_transcription || response.structured_conversation?.conversation?.map(msg => msg.text)?.join('\\n') || '';\n          console.log(\"📝 Extracted transcript:\", transcript);\n          if (!transcript) {\n            throw new Error('No transcript found in response structure');\n          }\n          this.processingState = 'transcribing';\n          this.dataService.job = transcript;\n          console.log(\"🎯 Starting evaluation with transcript:\", this.dataService.job);\n          // Set a default summary if none exists\n          if (!this.dataService.summary) {\n            this.dataService.summary = \"ML role candidate interview evaluation\";\n          }\n          console.log(\"📋 Using summary:\", this.dataService.summary);\n          this.evaluateInterview(this.dataService.job, this.dataService.summary);\n        } catch (error) {\n          console.error(\"❌ Error processing response:\", error.message);\n          console.error(\"🔍 Response structure:\", response);\n          this.processingState = 'error';\n          this.errorMessage = `Failed to process interview data: ${error.message}`;\n        }\n      }, error => {\n        console.error(\"❌ Error fetching interview data:\", error);\n        this.processingState = 'error';\n        this.errorMessage = `Failed to fetch interview data: ${error.message || 'Unknown error'}`;\n      });\n    }\n    evaluateInterview(conversation, summary) {\n      this.processingState = 'evaluating';\n      console.log('🔄 Starting interview evaluation...');\n      // Ensure we have a valid conversation\n      if (!conversation) {\n        this.processingState = 'error';\n        this.errorMessage = 'No interview conversation data available';\n        return;\n      }\n      // Format conversation into an array of strings (one per line)\n      const conversationArray = conversation.split('\\n').map(line => line.trim()).filter(line => line.length > 0); // Remove empty lines\n      // Ensure we have a valid summary or provide a default one\n      const defaultSummary = \"ML role candidate interview evaluation\";\n      const processedSummary = summary || defaultSummary;\n      const jobData = {\n        conversation: conversationArray,\n        summary: processedSummary,\n        phoneNumber: this.dataService.phoneNumber\n      };\n      console.log(\"📤 Sending evaluation data:\", jobData);\n      this.http.post('http://localhost:4000/api/finaleval', jobData).subscribe(response => {\n        console.log(\"✅ Final evaluation response:\", response);\n        if (!response) {\n          throw new Error('No evaluation data in response');\n        }\n        this.processingState = 'done';\n        this.dataService.evaluationResults = response;\n        console.log(\"💾 Stored evaluation results:\", this.dataService.evaluationResults);\n      }, error => {\n        console.error(\"❌ Error evaluating interview:\", error);\n        console.error(\"📋 Request data was:\", jobData);\n        this.processingState = 'error';\n        this.errorMessage = `Failed to evaluate interview: ${error.message || 'Unknown error'}`;\n      });\n    }\n    retryProcessing() {\n      this.processInterviewData();\n    }\n    viewResults() {\n      this.router.navigate(['/interview-results']);\n    }\n    downloadRecording() {\n      if (this.audioUrl) {\n        const link = document.createElement('a');\n        link.href = this.audioUrl;\n        link.download = 'interview-recording.wav';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n    static ɵfac = function AiInterviewComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AiInterviewComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AiInterviewComponent,\n      selectors: [[\"app-ai-interview\"]],\n      decls: 11,\n      vars: 7,\n      consts: [[1, \"interview-container\"], [1, \"interview-header\"], [1, \"header-text\"], [1, \"question-section\"], [3, \"ngSwitch\"], [\"class\", \"status-message\", 4, \"ngSwitchCase\"], [\"class\", \"status-message error\", 4, \"ngSwitchCase\"], [1, \"status-message\"], [1, \"loading-spinner\"], [\"class\", \"processing-state\", 4, \"ngSwitchCase\"], [\"class\", \"processing-state success\", 4, \"ngSwitchCase\"], [\"class\", \"processing-state error\", 4, \"ngSwitchCase\"], [1, \"processing-state\"], [1, \"processing-state\", \"success\"], [\"class\", \"audio-section\", 4, \"ngIf\"], [\"class\", \"audio-section no-audio\", 4, \"ngIf\"], [\"class\", \"transcription-section\", 4, \"ngIf\"], [1, \"view-results-button\", 3, \"click\"], [1, \"audio-section\"], [1, \"audio-controls\"], [\"id\", \"interviewAudio\", \"controls\", \"\"], [\"type\", \"audio/wav\", 3, \"src\"], [1, \"download-button\", 3, \"click\"], [1, \"fas\", \"fa-download\"], [1, \"audio-section\", \"no-audio\"], [1, \"transcription-section\"], [1, \"transcription-content\"], [1, \"processing-state\", \"error\"], [1, \"retry-button\", 3, \"click\"], [1, \"status-message\", \"error\"]],\n      template: function AiInterviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"AI Interview Session\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵelementContainerStart(6, 4);\n          i0.ɵɵtemplate(7, AiInterviewComponent_div_7_Template, 4, 0, \"div\", 5)(8, AiInterviewComponent_div_8_Template, 4, 0, \"div\", 5)(9, AiInterviewComponent_div_9_Template, 7, 6, \"div\", 5)(10, AiInterviewComponent_div_10_Template, 5, 1, \"div\", 6);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"error\", ctx.callStatus === \"failed\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitch\", ctx.callStatus);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"initiating\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"in_progress\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"completed\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"failed\");\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, HttpClientModule, RouterModule],\n      styles: [\".interview-container[_ngcontent-%COMP%]{margin:85px auto 100px;align-items:center;width:100%;max-width:900px;background:linear-gradient(to bottom,#1a1f36,#111827);border-radius:20px;overflow:hidden;box-shadow:0 20px 40px #0006;border:1px solid rgba(255,255,255,.05)}.interview-header[_ngcontent-%COMP%]{display:flex;align-items:center;padding:24px 32px;background:#ffffff05;border-bottom:1px solid rgba(255,255,255,.05);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.header-text[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:24px;margin:0;background:linear-gradient(90deg,#60a5fa,#3b82f6);-webkit-background-clip:text;-webkit-text-fill-color:transparent;font-weight:600}.question-section[_ngcontent-%COMP%]{background:#1e293b80;margin:24px;padding:32px;border-radius:16px;min-height:300px;display:flex;justify-content:center;align-items:center;border:1px solid rgba(255,255,255,.05);box-shadow:0 8px 16px #0003}.status-message[_ngcontent-%COMP%]{text-align:center;color:#e2e8f0}.loading-spinner[_ngcontent-%COMP%]{width:48px;height:48px;border:4px solid rgba(59,130,246,.2);border-top:4px solid #3b82f6;border-radius:50%;margin:0 auto 24px;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.error[_ngcontent-%COMP%]{border:1px solid rgba(239,68,68,.3);background:#ef44440d}.error[_ngcontent-%COMP%]   .status-message[_ngcontent-%COMP%]{color:#ef4444}.retry-button[_ngcontent-%COMP%], .view-results-button[_ngcontent-%COMP%]{margin-top:20px;padding:12px 28px;border:none;border-radius:8px;cursor:pointer;transition:all .3s ease;font-weight:500;font-size:16px;text-transform:uppercase;letter-spacing:.5px}.retry-button[_ngcontent-%COMP%]{background:linear-gradient(135deg,#3b82f6,#2563eb);color:#fff;box-shadow:0 4px 12px #2563eb33}.retry-button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 6px 16px #2563eb4d}.view-results-button[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;box-shadow:0 4px 12px #10b98133}.view-results-button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 6px 16px #10b9814d}.processing-state[_ngcontent-%COMP%]{text-align:center;padding:20px;border-radius:12px;background:#ffffff05}.processing-state[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:16px 0;color:#e2e8f0;font-size:16px}.success[_ngcontent-%COMP%]{color:#10b981}.audio-section[_ngcontent-%COMP%]{margin:32px 0;padding:24px;background:#3b82f60d;border-radius:16px;border:1px solid rgba(59,130,246,.1)}.audio-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#60a5fa;margin-bottom:16px;font-size:20px;font-weight:600}audio[_ngcontent-%COMP%]{width:100%;margin:16px 0;border-radius:8px;background:#ffffff0d}audio[_ngcontent-%COMP%]::-webkit-media-controls-panel{background:#1e293bcc}audio[_ngcontent-%COMP%]::-webkit-media-controls-current-time-display, audio[_ngcontent-%COMP%]::-webkit-media-controls-time-remaining-display{color:#e2e8f0}.transcription-section[_ngcontent-%COMP%]{margin:32px 0;padding:24px;background:#ffffff05;border-radius:16px;border:1px solid rgba(255,255,255,.05)}.transcription-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#60a5fa;margin-bottom:16px;font-size:20px;font-weight:600}.transcription-content[_ngcontent-%COMP%]{white-space:pre-wrap;line-height:1.8;max-height:400px;overflow-y:auto;padding:20px;background:#0003;border-radius:8px;font-family:Fira Code,monospace;color:#e2e8f0;font-size:15px;border:1px solid rgba(255,255,255,.05)}.download-button[_ngcontent-%COMP%]{background:linear-gradient(135deg,#3b82f6,#2563eb);color:#fff;border:none;padding:12px 24px;border-radius:8px;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:15px;font-weight:500;transition:all .3s ease;box-shadow:0 4px 12px #2563eb33}.download-button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 6px 16px #2563eb4d}.download-button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:18px}[_ngcontent-%COMP%]::-webkit-scrollbar{width:8px;height:8px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#1e293b80;border-radius:4px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#3b82f64d;border-radius:4px;border:2px solid rgba(30,41,59,.5)}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#3b82f680}.evaluation-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:20px;padding:20px}.analysis-summary[_ngcontent-%COMP%], .final-decision[_ngcontent-%COMP%]{background-color:#1e2c4a;border-radius:8px;padding:20px}.strengths[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .improvement-areas[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-bottom:10px;color:#10b981}.improvement-areas[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{color:#eab308}.decision-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:15px}.accepted-badge[_ngcontent-%COMP%]{color:#10b981;font-weight:700}@media (max-width: 768px){.evaluation-container[_ngcontent-%COMP%]{grid-template-columns:1fr}}\", \".audio-section[_ngcontent-%COMP%]{margin:20px 0;padding:15px;background:#2563eb1a;border-radius:8px}.audio-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#2563eb;margin-bottom:10px}audio[_ngcontent-%COMP%]{width:100%;margin:10px 0}.transcription-section[_ngcontent-%COMP%]{margin:20px 0;padding:15px;background:#ffffff0d;border-radius:8px}.transcription-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#2563eb;margin-bottom:10px}.transcription-content[_ngcontent-%COMP%]{white-space:pre-wrap;line-height:1.6;max-height:300px;overflow-y:auto;padding:10px;background:#0003;border-radius:4px;font-family:monospace}.view-results-button[_ngcontent-%COMP%]{margin-top:20px}.no-audio[_ngcontent-%COMP%]{text-align:center;color:#666;font-style:italic}.audio-controls[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:center}.download-button[_ngcontent-%COMP%]{background-color:#2563eb;color:#fff;border:none;padding:8px 16px;border-radius:4px;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:14px;transition:background-color .2s}.download-button[_ngcontent-%COMP%]:hover{background-color:#1d4ed8}.download-button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:16px}\"]\n    });\n  }\n  return AiInterviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}