{"ast":null,"code":"import { provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\nimport { routes } from './app.routes';\nimport { provideClientHydration, withEventReplay } from '@angular/platform-browser';\nexport const appConfig = {\n  providers: [provideZoneChangeDetection({\n    eventCoalescing: true\n  }), provideRouter(routes), provideClientHydration(withEventReplay()), provideHttpClient()]\n};","map":{"version":3,"names":["provideZoneChangeDetection","provideRouter","provideHttpClient","routes","provideClientHydration","withEventReplay","appConfig","providers","eventCoalescing"],"sources":["C:\\Users\\Hardik\\Desktop\\Monday Duplicate\\frontend\\src\\app\\app.config.ts"],"sourcesContent":["import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient } from '@angular/common/http';\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideClientHydration, withEventReplay } from '@angular/platform-browser';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }), \r\n    provideRouter(routes), \r\n    provideClientHydration(withEventReplay()),\r\n    provideHttpClient()\r\n  ]\r\n};\r\n"],"mappings":"AAAA,SAA4BA,0BAA0B,QAAQ,eAAe;AAC7E,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,sBAAsB,EAAEC,eAAe,QAAQ,2BAA2B;AAEnF,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTP,0BAA0B,CAAC;IAAEQ,eAAe,EAAE;EAAI,CAAE,CAAC,EACrDP,aAAa,CAACE,MAAM,CAAC,EACrBC,sBAAsB,CAACC,eAAe,EAAE,CAAC,EACzCH,iBAAiB,EAAE;CAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}